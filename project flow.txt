FLOW

Sign Up -> Login -> Dashboard
-----------------------------------------------------------------------
על מנת לאבטח את ה-fastapi app השתמשנו באימות המשתמש בJSON Web Tokens (JWTs)
אימות הינו תהליך שמבצע הזדהות של משתמשים על מנת לתת להם גישה מאובטחת למשאבי האפליקציה.

באפלקיצה שלנו השתמשנו באימות המבצע יצירת טוקנים מאובטחים שנקראים bearer tokens
על מנת לבצע את הקידוד השתמשנו בPyJWT

בתיקיית ה-auth
יצרנו קובץ הנקרא jwt_handler:
קובץ זה אחראי על התחברות, קידוד, פענוח והחזרת הטוקנים.
השתמשנו בסיפריית time על מנת שיהיה תוקף (תאריך תפוגה) דלטוקנס.
הטוקנס מקודדים לתוך מחרוזות (בעזרת payload) ונשמרים בDATABASE - mongodb

JWT Secret and Algorithm
הsecret הוא המקודד והמפענח של הטוקן, מורכב בעזרת אלגוריתם המשתמש בפונקציית רנדום של המערכת - 64 בינארי הקסאדצימלי (חתימה).

----------------------------------------------------------------
כאשר מגיעים ל-Dashboard אנו רואים את:

- טופס לשינוי פרטי משתמש
- טופס המציג את מספר בקשות החברות של המשתמש
- טופס המציג את מספר ההתראות (הזמנות לאירועים) של המשתמש
- טבלה המכילה את הקורסים של התואר
- סרגל צד להפניה לדפים אחרים

User profile:
- טופס המאפשר למשתמש לשנות את המידע האישי שלו/שלה

Friend zone:
- טופס המציג את החברים של המשתמש, בקשות החברות של המשתמש והיכולת להוסיף חבר חדש

Find a meeting:
- טופס המחשב מאחורי הקלעים את השעות הפנויות של המשתתפים איתם
  אתה רוצה לתזמן אירוע

Calendar:
- טופס המציג את כל האירועים שנבחרו על ידי המשתמש
  והאירועים שהוא / היא הוזמנו אליהם,
  עם אפשרות להוסיף אירועים חדשים ולהזמין אליהם אנשים אחרים בו זמנית

My courses:
- טופס המציג את הקורסים של המשתמש

About us:
- מידע על הפרויקט ומטרתו

---------------------------------------------------------------------------------
אופטימיזציות:

useCallback - hook שנועד למנוע קריאה חוזרת של פונקציה
על ידי שמירת מצביע של ה-callback function

authentication - ברגע ההתחברות, מבצעים שליחת בקשות למסד נתונים
ושומרים את המידע הבסיסי של המשתמש בתוך ה-local storage של הדפדפן

lazy loading - טעינת הקומפוננטות כ-chunks וזה מתבצע on demand

delay deduction -  שליחת כל בקשות ה-GET פעם אחת בלבד למסד הנתונים
כלומר: מידע על נתונים בסיסיים של המשתמש, אירועי המשתמש, הקורסים של המשתמש, חגים ועוד

custom components and custom hooks  - בשביל reusability

Intervals - כדי לא לשלוח בקשת HTTP לכל פעולה,
בחרנו להגדיר אינטרוול של שתי דקות לאחזור נתונים רלוונטיים של המשתמש

async-wait

"to" / useHistory hook instead of "href" - כדי למנוע re-rendering מחדש של הקומפוננטות
(שומרים על הקונספט של React - single page application)